<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alert_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Alert_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Error_SomethingWentWrong" xml:space="preserve">
    <value>Something went wrong</value>
  </data>
  <data name="Groups_CreateNew" xml:space="preserve">
    <value>Create New Group</value>
  </data>
  <data name="Groups_DeleteButtonTitle" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Groups_DetailsPageTitle" xml:space="preserve">
    <value>Group of vehicles</value>
  </data>
  <data name="Groups_GroupNamePlaceholder" xml:space="preserve">
    <value>Group Name</value>
  </data>
  <data name="Groups_IHaveCode" xml:space="preserve">
    <value>I have an invite code</value>
  </data>
  <data name="Groups_InviteButtonTitle" xml:space="preserve">
    <value>Invite an Employee</value>
  </data>
  <data name="Groups_MakeCurrent" xml:space="preserve">
    <value>Make Current</value>
  </data>
  <data name="Groups_NoGroupsDescription" xml:space="preserve">
    <value>If you have an invite code press "I have an invite code button"</value>
  </data>
  <data name="Groups_PageTitle" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="History_DaysSummaryPageTitle" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="History_TotalSum" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="Invites_ActivateButtonTitle" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="Invites_ActivatePageTitle" xml:space="preserve">
    <value>Activate Invite</value>
  </data>
  <data name="Invites_ActivationError" xml:space="preserve">
    <value>Could not activate invite</value>
  </data>
  <data name="Invites_CodeLabel" xml:space="preserve">
    <value>Invite Code</value>
  </data>
  <data name="Invites_CreateInviteButtonText" xml:space="preserve">
    <value>Create Invite</value>
  </data>
  <data name="Invites_CreateInvitePageTitle" xml:space="preserve">
    <value>Create Invite</value>
  </data>
  <data name="Invites_HelpTextForCode" xml:space="preserve">
    <value>Give this code to the employee</value>
  </data>
  <data name="Invites_IsAdmin" xml:space="preserve">
    <value>Is Admin</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>min.</value>
  </data>
  <data name="RideDetails_CancellationConfirmation" xml:space="preserve">
    <value>Quit without saving?</value>
  </data>
  <data name="RideDetails_ConfirmDeleteMessage" xml:space="preserve">
    <value>Do you want to delete this ride?</value>
  </data>
  <data name="RideDetails_ConfirmDeleteTitle" xml:space="preserve">
    <value>Delete Confirmation</value>
  </data>
  <data name="RideDetails_Cost" xml:space="preserve">
    <value>Cost: </value>
  </data>
  <data name="RideDetails_Currency" xml:space="preserve">
    <value> roubles</value>
  </data>
  <data name="RideDetails_DeleteButtonTitle" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RideDetails_PageTitle" xml:space="preserve">
    <value>Save ride</value>
  </data>
  <data name="RideDetails_Price" xml:space="preserve">
    <value>Price per {0} minutes</value>
  </data>
  <data name="RideDetails_RideDuration" xml:space="preserve">
    <value>Duration, minutes</value>
  </data>
  <data name="RideDetails_VehicleName" xml:space="preserve">
    <value>Vehicle Name</value>
  </data>
  <data name="SaveButtonTitle" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SignIn_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SignIn_FailedToLogin" xml:space="preserve">
    <value>Login failed</value>
  </data>
  <data name="SignIn_NoAccount" xml:space="preserve">
    <value>I don't have an account</value>
  </data>
  <data name="SignIn_PageTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignIn_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignIn_SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignUp_DoSignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUp_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SignUp_EmailIsEmpty" xml:space="preserve">
    <value>Email cannot be empty</value>
  </data>
  <data name="SignUp_InvalidEmail" xml:space="preserve">
    <value>The email is invalid</value>
  </data>
  <data name="SignUp_PageTitle" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUp_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignUp_PasswordIsEmpty" xml:space="preserve">
    <value>Password cannot be empty</value>
  </data>
  <data name="SignUp_PasswordsDontMatch" xml:space="preserve">
    <value>Passwords don't match!</value>
  </data>
  <data name="SignUp_RepeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="SignUp_WeakPassword" xml:space="preserve">
    <value>Password must be at least 6 characters long</value>
  </data>
  <data name="Stats_CarName" xml:space="preserve">
    <value>Car Name</value>
  </data>
  <data name="Stats_Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Stats_PageTitle" xml:space="preserve">
    <value>Stats</value>
  </data>
  <data name="Stats_TotalCostPerPeriod" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Stats_Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Stats_Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Vehicles_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Vehicles_DeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to delete this vehicle?</value>
  </data>
  <data name="Vehicles_DeleteConfirmationTitle" xml:space="preserve">
    <value>Delete Vehicle</value>
  </data>
  <data name="Vehicles_DetailsPageTitle" xml:space="preserve">
    <value>Vehicle details</value>
  </data>
  <data name="Vehicles_GoToHistory" xml:space="preserve">
    <value>Open History</value>
  </data>
  <data name="Vehicles_ListPageTitle" xml:space="preserve">
    <value>Vehicles</value>
  </data>
  <data name="Vehicles_Price" xml:space="preserve">
    <value>Price per {0} minutes</value>
  </data>
  <data name="Vehicles_QuickSaveButtonsLabel" xml:space="preserve">
    <value>Quick save buttons</value>
  </data>
  <data name="Vehicles_RideSaved" xml:space="preserve">
    <value>Ride saved</value>
  </data>
  <data name="Vehicles_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Vehicles_UnitOfTime" xml:space="preserve">
    <value>Unit of time</value>
  </data>
  <data name="Vehicles_VehicleName" xml:space="preserve">
    <value>Vehicle Name</value>
  </data>
  <data name="Vehicle_StartRide" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Vehicle_StopRide" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>